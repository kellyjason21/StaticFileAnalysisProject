#ifndef STATICFILEANALYSER_H
#define STATICFILEANALYSER_H
/**
 * @file
 * @author Jason Kelly <C00224136@itcarlow.ie>
 * @version 1.0
 * @section Static File Anlysis Tool Class
 *
 * @section Description
 * This class contains all of the components necessary to build the application.
 * It is the class that gets instanciated in main.cpp to start the application.
 */
/**
  * @brief Includes
  * @author Jason Kelly
  * These are all the includes for the application to make it build and function
  */
#include <bitset>
#include <QByteArray>
#include <QDataStream>
#include <QFile>
#include <QFileDialog>
#include <QInputDialog>
#include <QMainWindow>
#include <QMessageBox>
#include <QTextStream>
#include <QRegularExpression>
#include <math.h>
#include <string.h>
#include <QtDebug>
#include <capstone/capstone.h>

QT_BEGIN_NAMESPACE
namespace Ui { class StaticFileAnalyser; }
QT_END_NAMESPACE

class StaticFileAnalyser : public QMainWindow
{
    Q_OBJECT

/**
 * Constructor that creates the application window
 *
 * @param parent This is automatically generated by Qt on creation of the project.
 *
 */
public:
    StaticFileAnalyser(QWidget *parent = nullptr);
    ~StaticFileAnalyser();

private slots:

    /**
     * @brief on_actionMinimise_triggered This function is what gets called when the user presses the minimise option from the Window menu in the toolbar.
     * This function minimises the application to the toolbar.
     * @param none
     */
    void on_actionMinimise_triggered();

    /**
     * @brief on_actionSave_and_Exit_triggered This function is what gets called when the user presses the save and exit option from the Exit menu in the toolbar.
     * This function will prompt the user for a name to save the file under if there is no file open and will save it automatically using the correct extension if there is a file open.
     * @param none
     */
    void on_actionSave_and_Exit_triggered();

    /**
     * @brief on_actionDiscard_changes_and_Exit_triggered
     * This function is what gets called when the user presses the discard changes and exit option from the Exit menu in the toolbar.
     * This function will prompt the user to confirm that they wish to discard changes before cleaning up and exiting.
     * @param none
     */
    void on_actionDiscard_changes_and_Exit_triggered();

    /**
     * @brief on_actionMaximise_triggered
     * This function is what gets called when the user presses the maximise option from the Exit menu in the toolbar.
     * This function will resize and reposition this window to take up the maximum resolution without concealing the operating system toolbar.
     * @param none
     */
    void on_actionMaximise_triggered();

    /**
     * @brief on_actionRestore_triggered
     * This function is what gets called when the user presses the restore option from the Window menu in the toolbar.
     * This function will resize the window to the original size and position it was before modifications were made to it's properties.
     * @param none
     */
    void on_actionRestore_triggered();

    /**
     * @brief on_actionFullscreen_triggered
     * This function is what gets called when the user presses the fullscreen option from the Window menu in the toolbar.
     * This function will put the window into fullscreen mode
     * @param none
     */
    void on_actionFullscreen_triggered();

    /**
     * @brief on_actionOpen_triggered
     * This function is what gets called when the user presses the open option from the File menu in the toolbar.
     * This function prompts the user to supply a file to be opened.
     * If the file is of the incorrect type, the application will inform the user and reprompt them to pick a valid file type.
     * It will then change the window title to reflect that file path.
     * @param none
     */
    void on_actionOpen_triggered();

    /**
     * @brief on_actionGREP_Funcitonality_triggered
     * This function is what gets called when the user presses the GREP functionality option from the Search menu in the toolbar.
     * This function will prompt the user to enter in a regular expression to search from the text in the window.
     * It will then highlight any matches found in Green and change the font colour to Black.
     * @param none
     */
    void on_actionGREP_Funcitonality_triggered();

    /**
     * @brief on_actionSave_triggered
     * This function is what gets called when the user presses the Save option from the File menu in the toolbar.
     * This function will prompt the user to enter in a filename and will append the appropriate extension and save the current contents of the window to that file.
     * If a file is already opened it will automatically save it to the opened file name with the appropriate extension.
     * @param none
     */
    void on_actionSave_triggered();

    /**
     * @brief on_actionAscii_View_triggered
     * This function is what gets called when the user presses the ascii view option from the View menu in the toolbar.
     * This function will display the opened file in ASCII format on the current window.
     * If a file is not opened then it will inform the user to open a file first.
     * @param none
     */
    void on_actionAscii_View_triggered();

    /**
     * @brief on_actionBinary_View_triggered
     * This function is what gets called when the user presses the binary view option from the View menu in the toolbar.
     * This function will display the opened file in raw binary format on the current window.
     * If a file is not opened then it will inform the user to open a file first.
     * @param none
     */
    void on_actionBinary_View_triggered();

    /**
     * @brief on_actionDisassembled_View_triggered
     * This function is what gets called when the user presses the disassembled view option from the View menu in the toolbar.
     * This function will display the opened file in disassembled format on the current window.
     * If a file is not opened then it will inform the user to open a file first.
     * This function is not working correctly yet.
     * @param none
     */
    void on_actionDisassembled_View_triggered();

    /**
     * @brief on_actionFile_Properties_triggered
     * This function is what gets called when the user presses the file properties option from the View menu in the toolbar.
     * This function will display the opened file properties (size, type and entropy) on the current window.
     * If a file is not opened then it will inform the user to open a file first.
     * @param none
     */
    void on_actionFile_Properties_triggered();

    /**
     * @brief on_actionMachine_View_triggered
     * This function is an artefact that Qt requires due to the earlier version of this UI.
     * This function was replaced with a hexadecimal view.
     */
    void on_actionMachine_View_triggered();

    /**
     * @brief on_actionStrings_View_triggered
     * This function is what gets called when the user presses the strings view option from the View menu in the toolbar.
     * This function will display any strings from the opened file on the current window.
     * If a file is not opened then it will inform the user to open a file first.
     * @param none
     */
    void on_actionStrings_View_triggered();

    /**
     * @brief on_actionClose_triggered
     * This function is what gets called when the user presses the ascii view option from the View menu in the toolbar.
     * This function will prompt the user to save their changes and run through the saving procedure if they click yes.
     * It will then close the file and clean up.
     * The initial state of the application is restored.
     * If a file is not opened then it will inform the user to open a file first.
     * @param none
     */
    void on_actionClose_triggered();

    /**
     * @brief on_actionEnable_Editing_toggled
     * This function is what gets called when the user presses the enable editing option from the Edit menu in the toolbar.
     * This function will enable the text browser widget or disable it depending on the current state of that widget.
     * @param arg1
     * This parameter is the current state of the checkbox, true for enabled and false for disabled.
     * @param none
     */
    void on_actionEnable_Editing_toggled(bool arg1);

    /**
     * @brief on_actionHex_View_triggered
     * This function is what gets called when the user presses the hex view option from the View menu in the toolbar.
     * This function will display the opened file in hexadecimal format on the current window.
     * If a file is not opened then it will inform the user to open a file first.
     * @param none
     */
    void on_actionHex_View_triggered();

private:
    /**
     * @brief ui
     * This paramter is what loads in the layout of the user interface.
     */
    Ui::StaticFileAnalyser *ui;

    /**
     * @brief currentFileName
     * This instance variable stores the name of the currently opened file name
     */
    QString currentFileName = "New File";

    /**
     * @brief currentFileExtension
     * This stores the current extension that should be used if the user wishes to save the file at that point in time.
     */
    QString currentFileExtension = ".asm";

    /**
     * @brief openedFile
     * This instance variable stores the handle to the currently opened file.
     */
    QFile openedFile;

    /**
     * @brief openedFileType
     * This instance variable stores the current type of file opened in the application (Portable Executable binary or Executable and Linkable Format binary).
     */
    QString openedFileType;
};
#endif // STATICFILEANALYSER_H
